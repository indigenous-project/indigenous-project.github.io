{"version":3,"sources":["server/DashboardManagement.js","views/dashboard/Dashboard.js"],"names":["bearerToken","localStorage","getItem","DashboardStatistics","a","fetch","GetUrl","method","mode","headers","catch","error","console","log","message","generateIcon","iconName","content","freeSet","className","size","Dashboard","useState","statistics","setStatistics","allUsersCount","setAllUsersCount","setLoading","LoadDashboard","response","json","DashboardObject","data","indigenous","none","inuit","métis","useEffect","md","sm","Math","floor","precision","color","value","jobs","events","news","organizations","services","href","style","textDecoration","unreads","discussions"],"mappings":"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","file":"static/js/22.15964bd4.chunk.js","sourcesContent":["import GetUrl from '../server/ApiEndpoints'\nlet bearerToken = 'Bearer ' + localStorage.getItem('HDI-token')\n\nconst DashboardStatistics = async function () {\n    return await fetch(GetUrl('DashboardStatistics'), {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            'Authorization': bearerToken,\n            'Accept': 'application/json',\n        }\n    })\n        .catch(error => {\n            console.log(error.message)\n        })\n}\n\n\nexport { DashboardStatistics }","import React, { lazy, useState, useEffect } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CLink,\n  CProgress,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DashboardStatistics } from '../../../src/server/DashboardManagement'\nimport { freeSet } from '@coreui/icons'\nimport { node } from 'prop-types'\n\nconst generateIcon = function (iconName) {\n  return (<CIcon content={freeSet[iconName]} className=\"text-white\" size=\"3xl\" />)\n}\n\n\n\nconst Dashboard = () => {\n  const [statistics, setStatistics] = useState()\n  const [allUsersCount, setAllUsersCount] = useState(1)\n  const [loading, setLoading] = useState(true)\n  const LoadDashboard = async function () {\n    setLoading(true)\n    const response = await DashboardStatistics()\n    console.log(response)\n    const DashboardObject = (await response.json()).data\n    setStatistics(DashboardObject)\n    setAllUsersCount(DashboardObject.indigenous + DashboardObject.none + DashboardObject.inuit + DashboardObject.métis)\n    console.log(statistics, allUsersCount)\n    setLoading(false)\n  }\n  useEffect(() => {\n    LoadDashboard()\n  }, [])\n  return (\n    <>\n      <CCard>\n        {statistics && allUsersCount ? <CCardBody>\n          <CRow className=\"text-center\">\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\n              <div className=\"text-muted\">#Indigenous</div>\n              <strong>{statistics.indigenous + ` Users (${Math.floor((statistics.indigenous / allUsersCount) * 100)}%)`}</strong>\n              <CProgress\n                className=\"progress-xs mt-2\"\n                precision={1}\n                color=\"success\"\n                value={Math.floor((statistics.indigenous / allUsersCount) * 100)}\n              />\n            </CCol>\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0 d-md-down-none\">\n              <div className=\"text-muted\">#Inuit</div>\n              <strong>{statistics.inuit + ` Users (${Math.floor((statistics.inuit / allUsersCount) * 100)}%)`}</strong>\n              <CProgress\n                className=\"progress-xs mt-2\"\n                precision={allUsersCount}\n                color=\"info\"\n                value={Math.floor((statistics.inuit / allUsersCount) * 100)}\n              />\n            </CCol>\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\n              <div className=\"text-muted\">#Métis</div>\n              <strong>{statistics.métis + ` Users (${Math.floor((statistics.métis / allUsersCount) * 100)}%)`}</strong>\n              <CProgress\n                className=\"progress-xs mt-2\"\n                precision={allUsersCount}\n                color=\"warning\"\n                value={Math.floor((statistics.métis / allUsersCount) * 100)}\n              />\n            </CCol>\n            <CCol md sm=\"12\" className=\"mb-sm-2 mb-0\">\n              <div className=\"text-muted\">#Regular</div>\n              <strong>{statistics.none + ` Users (${Math.floor((statistics.none / allUsersCount) * 100)}%)`}</strong>\n              <CProgress\n                className=\"progress-xs mt-2\"\n                precision={allUsersCount}\n                color=\"danger\"\n                value={Math.floor((statistics.none / allUsersCount) * 100)}\n              />\n            </CCol>\n          </CRow>\n        </CCardBody> : null}\n      </CCard>\n      {statistics ? <div>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardBody className=\"bg-info\">\n                <div className=\"d-flex\">\n                  {generateIcon('cilBriefcase')}\n                  <div className=\"ml-4\">{statistics.jobs}</div>\n                </div>\n                <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Jobs</strong></h4>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol>\n            <CCard>\n              <CCardBody className=\"bg-warning\">\n                <div className=\"d-flex\">\n                  {generateIcon('cilColorPalette')}\n                  <div className=\"ml-4\">{statistics.events}</div>\n                </div>\n                <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Events</strong></h4>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol>\n            <CCard>\n              <CCardBody className=\"bg-success\">\n                <div className=\"d-flex\">\n                  {generateIcon('cilNewspaper')}\n                  <div className=\"ml-4\">{statistics.news}</div>\n                </div>\n                <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">News</strong></h4>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol>\n            <CCard>\n              <CCardBody className=\"bg-secondary\">\n                <div className=\"d-flex\">\n                  {generateIcon('cilInstitution')}\n                  <div className=\"ml-4\">{statistics.organizations}</div>\n                </div>\n                <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Organizations</strong></h4>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol>\n            <CCard>\n              <CCardBody className=\"bg-primary\">\n                <div className=\"d-flex\">\n                  {generateIcon('cilSpa')}\n                  <div className=\"ml-4\">{statistics.services}</div>\n                </div>\n                <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Services</strong></h4>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <a href=\"#/messages\" style={{ textDecoration: 'none' }}>\n              <CCard>\n                <CCardBody className=\"bg-danger\">\n                  <div className=\"d-flex\">\n                    {generateIcon('cilChatBubble')}\n                    <h5 className=\"ml-3\">{statistics.unreads}</h5>\n                  </div>\n                  <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Unread Messages</strong></h4>\n                </CCardBody>\n              </CCard>\n            </a>\n          </CCol>\n          <CCol>\n            <a href=\"#/discussions\" style={{ textDecoration: 'none' }}>\n              <CCard>\n                <CCardBody className=\"bg-dark\">\n                  <div className=\"d-flex\">\n                    {generateIcon('cilClipboard')}\n                    <h5 className=\"ml-3\">{statistics.discussions}</h5>\n                  </div>\n                  <h4 className=\"ml-5 mt-n4\"><strong className=\"ml-3\">Discussions</strong></h4>\n                </CCardBody>\n              </CCard>\n            </a>\n          </CCol>\n        </CRow>\n      </div> : null}\n    </>\n  )\n}\n\nexport default Dashboard\n"],"sourceRoot":""}