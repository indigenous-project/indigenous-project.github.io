{"version":3,"sources":["views/pages/login/Login.js","server/ApiEndpoints.js","server/AuthManagement.js"],"names":["Login","setToken","useState","username","setUserName","password","setPassword","loading","setLoading","error","setError","handleSubmit","e","a","preventDefault","SignIn","response","ok","json","then","resp","data","token","userInfo","localStorage","setItem","JSON","stringify","isAdmin","className","md","onSubmit","name","type","placeholder","required","autoComplete","onChange","target","value","xs","color","style","width","src","ApiEndpoints","Logout","ManagePassword","ForgotPassword","ResetPassword","UsersList","UsersEdit","UsersDetail","CategoriesList","CategoriesAdd","CategoriesEdit","CategoriesDelete","PostsList","PostsAdd","PostsEdit","PostsDetail","EventsList","EventsAdd","EventsEdit","EventsDetail","JobsList","JobsAdd","JobsEdit","JobsDetail","ServicesList","ServicesAdd","ServicesEdit","ServicesDetail","CentersList","CentersAdd","CentersEdit","CentersDetail","DiscussionsList","DiscussionsAdd","DiscussionsEdit","DiscussionsDetail","RepliesAdd","RepliesEdit","MediasAdd","MediasList","CommentsList","CommentsAdd","CommentsEdit","MessagesAdd","MessagesList","PollsList","PollsAdd","PollsEdit","DashboardStatistics","GetUrl","ApiName","bearerToken","getItem","fetch","method","headers","body","email","catch","console","log"],"mappings":"6MAoHeA,UA7FD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEEC,qBAFF,mBAEvBC,EAFuB,KAEbC,EAFa,OAGEF,qBAHF,mBAGvBG,EAHuB,KAGbC,EAHa,OAIAJ,oBAAS,GAJT,mBAIvBK,EAJuB,KAIdC,EAJc,OAKJN,qBALI,mBAKvBO,EALuB,KAKhBC,EALgB,KAOxBC,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACnBD,EAAEE,iBACFJ,IACAF,GAAW,GAHQ,SAIIO,YAAOZ,EAAUE,GAJrB,QAIbW,EAJa,QAQbA,EAASC,GACXD,EAASE,OAAOC,KAAhB,uCAAqB,WAAMC,GAAN,mBAAAP,EAAA,wDACSO,EAAKC,KAAzBC,EADW,EACXA,MAAOC,EADI,EACJA,SACfC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,IAC1CA,EAASK,QACX3B,EAASqB,GAETZ,EAAS,uEANQ,2CAArB,uDAUAA,EAAS,mDAbXA,EAAS,wDAgBXF,GAAW,GAtBQ,2CAAH,sDAyBlB,OACE,qBAAKqB,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOE,SAAUpB,EAAjB,UACE,uCACA,mBAAGkB,UAAU,aAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAK,iBAGhB,cAAC,IAAD,CAAQC,KAAK,OAAOC,YAAY,WAAWC,UAAQ,EAACC,aAAa,WAAWC,SAAU,SAAAzB,GAAC,OAAIR,EAAYQ,EAAE0B,OAAOC,aAElH,eAAC,IAAD,CAAaV,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAK,wBAGhB,cAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACC,aAAa,mBAAmBC,SAAU,SAAAzB,GAAC,OAAIN,EAAYM,EAAE0B,OAAOC,aAE9H,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAASC,MAAM,UAAUR,KAAK,SAASJ,UAAU,OAAjD,qBAEF,cAAC,IAAD,CAAMW,GAAG,IAAT,SAAcjC,EAAU,cAAC,KAAD,CAAUsB,UAAU,SAAY,OACxD,cAAC,IAAD,CAAMW,GAAG,IAAIX,UAAU,aAAvB,SACE,cAAC,IAAD,CAASY,MAAM,OAAOZ,UAAU,OAAhC,mCAGHpB,EACC,cAAC,IAAD,UACE,cAAC,IAAD,CAAM+B,GAAG,KAAKX,UAAU,OAAxB,SACE,cAAC,IAAD,CAAQY,MAAM,SAAd,SAAwBhC,QAElB,YAIlB,cAAC,IAAD,CAAOoB,UAAU,4CAA4Ca,MAAO,CAAEC,MAAO,OAA7E,SACE,cAAC,IAAD,CAAWd,UAAU,cAArB,SACE,gCACE,wDACA,cAAC,IAAD,CAAMA,UAAU,OAAOe,IAAK,2D,iCCxGhD,IACMC,EAAe,CACjB9B,OAAQ,oBACR+B,OAAQ,oBACRC,eAAgB,4BAChBC,eAAgB,4BAChBC,cAAe,2BACfC,UAAW,kBACXC,UAAW,kBACXC,YAAa,gBACbC,eAAgB,sBAChBC,cAAe,qBACfC,eAAgB,sBAChBC,iBAAkB,wBAClBC,UAAW,iBACXC,SAAU,gBACVC,UAAW,iBACXC,YAAa,mBACbC,WAAY,kBACZC,UAAW,iBACXC,WAAY,kBACZC,aAAc,oBACdC,SAAU,gBACVC,QAAS,eACTC,SAAU,gBACVC,WAAY,kBACZC,aAAc,oBACdC,YAAa,mBACbC,aAAc,sBACdC,eAAgB,sBAChBC,YAAa,mBACbC,WAAY,kBACZC,YAAa,mBACbC,cAAe,qBACfC,gBAAiB,uBACjBC,eAAgB,sBAChBC,gBAAiB,uBACjBC,kBAAmB,yBACnBC,WAAY,kBACZC,YAAa,mBACbC,UAAW,iBACXC,WAAY,kBACZC,aAAc,oBACdC,YAAa,mBACbC,aAAc,oBACdC,YAAa,mBACbC,aAAc,oBACdC,UAAW,mBACXC,SAAU,kBACVC,UAAW,mBACXC,oBAAqB,iBAKVC,IAHA,SAAUC,GACrB,MArDY,2BAqDKlD,EAAakD,K,6ICpD9BC,EAAc,UAAYxE,aAAayE,QAAQ,aAE7ClF,EAAM,uCAAG,WAAgBZ,EAAUE,GAA1B,SAAAQ,EAAA,+EACJqF,MAAMJ,YAAO,UAAW,CAC3BK,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAM3E,KAAKC,UAAU,CAAE2E,MAAOnG,EAAUE,SAAUA,MAEjDc,MAAK,SAAAH,GACF,OAAOA,KAEVuF,OAAM,SAAA9F,GACH+F,QAAQC,IAAIhG,OAZT,2CAAH,wDAgBNqC,EAAM,uCAAG,sBAAAjC,EAAA,+EACJqF,MAAMJ,YAAO,UAAW,CAC3BK,OAAQ,OACRC,QAAS,CACL,cAAiBJ,EACjB,eAAgB,sBAGnB7E,MAAK,SAAAH,GACF,OAAOA,KAEVuF,OAAM,SAAA9F,GACH+F,QAAQC,IAAIhG,OAZT,2CAAH","file":"static/js/16.4e5a49d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { SignIn, UserDetail } from '../../../server/AuthManagement'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CSpinner,\n  CAlert,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// function Login\nconst Login = ({ setToken }) => {\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError()\n    setLoading(true)\n    const response = await SignIn(username, password)\n    if (!response)\n      setError('Something went wrong in the server! please try again')\n    else {\n      if (response.ok) {\n        response.json().then(async resp => {\n          const { token, userInfo } = resp.data\n          localStorage.setItem('HDI-UI', JSON.stringify(userInfo))\n          if (userInfo.isAdmin)\n            setToken(token)\n          else\n            setError('The credentials that you entered has not access to the Admin Panel!')\n        });\n      }\n      else {\n        setError('Invalid username or password, please try again!')\n      }\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit}>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"text\" placeholder=\"Username\" required autoComplete=\"username\" onChange={e => setUserName(e.target.value)} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" required autoComplete=\"current-password\" onChange={e => setPassword(e.target.value)} />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"3\">\n                        <CButton color=\"primary\" type=\"submit\" className=\"px-4\">Login</CButton>\n                      </CCol>\n                      <CCol xs=\"3\">{loading ? <CSpinner className=\"ml-2\" /> : null}</CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                      </CCol>\n                    </CRow>\n                    {error ?\n                      <CRow>\n                        <CCol xs=\"12\" className=\"mt-3\">\n                          <CAlert color=\"danger\">{error}</CAlert>\n                        </CCol>\n                      </CRow> : null}\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Welcome to Admin Panel</h2>\n                    <CImg className=\"mt-4\" src={'../../../../avatars/nbifc-logo.png'} />\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","const baseUrl = 'http://3.97.85.123:3030/'\nconst ApiEndpoints = {\n    SignIn: 'auth/users/signin',\n    Logout: 'auth/users/logout',\n    ManagePassword: 'auth/users/managepassword',\n    ForgotPassword: 'auth/users/forgotpassword',\n    ResetPassword: 'auth/users/resetpassword',\n    UsersList: 'auth/users/list',\n    UsersEdit: 'auth/users/edit',\n    UsersDetail: 'auth/users/me',\n    CategoriesList: 'api/categories/list',\n    CategoriesAdd: 'api/categories/add',\n    CategoriesEdit: 'api/categories/edit',\n    CategoriesDelete: 'api/categories/delete',\n    PostsList: 'api/posts/list',\n    PostsAdd: 'api/posts/add',\n    PostsEdit: 'api/posts/edit',\n    PostsDetail: 'api/posts/detail',\n    EventsList: 'api/events/list',\n    EventsAdd: 'api/events/add',\n    EventsEdit: 'api/events/edit',\n    EventsDetail: 'api/events/detail',\n    JobsList: 'api/jobs/list',\n    JobsAdd: 'api/jobs/add',\n    JobsEdit: 'api/jobs/edit',\n    JobsDetail: 'api/jobs/detail',\n    ServicesList: 'api/services/list',\n    ServicesAdd: 'api/services/add',\n    ServicesEdit: '\tapi/services/edit',\n    ServicesDetail: 'api/services/detail',\n    CentersList: 'api/centers/list',\n    CentersAdd: 'api/centers/add',\n    CentersEdit: 'api/centers/edit',\n    CentersDetail: 'api/centers/detail',\n    DiscussionsList: 'api/discussions/list',\n    DiscussionsAdd: 'api/discussions/add',\n    DiscussionsEdit: 'api/discussions/edit',\n    DiscussionsDetail: 'api/discussions/detail',\n    RepliesAdd: 'api/replies/add',\n    RepliesEdit: 'api/replies/edit',\n    MediasAdd: 'api/medias/add',\n    MediasList: 'api/medias/list',\n    CommentsList: 'api/comments/list',\n    CommentsAdd: 'api/comments/add',\n    CommentsEdit: 'api/comments/edit',\n    MessagesAdd: 'api/messages/add',\n    MessagesList: 'api/messages/list',\n    PollsList: 'api/surveys/list',\n    PollsAdd: 'api/surveys/add',\n    PollsEdit: 'api/surveys/edit',\n    DashboardStatistics: 'api/dashboard'\n}\nconst GetUrl = function (ApiName) {\n    return baseUrl + ApiEndpoints[ApiName]\n}\nexport default GetUrl","import GetUrl from '../server/ApiEndpoints'\nlet bearerToken = 'Bearer ' + localStorage.getItem('HDI-token')\n\nconst SignIn = async function (username, password) {\n    return fetch(GetUrl('SignIn'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email: username, password: password })\n    })\n        .then(response => {\n            return response\n        })\n        .catch(error => {\n            console.log(error)\n        })\n}\n\nconst Logout = async function () {\n    return fetch(GetUrl('Logout'), {\n        method: 'POST',\n        headers: {\n            'Authorization': bearerToken,\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(response => {\n            return response\n        })\n        .catch(error => {\n            console.log(error)\n        })\n}\n\n\nexport { SignIn, Logout }"],"sourceRoot":""}